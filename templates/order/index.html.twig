{% extends 'base.html.twig' %}

{% block title %}Accueil{% endblock %}

{% block body %}
<div class="p-4">
  <div class="max-w-6xl mx-auto">
    <!-- Logo et en-tête -->
    <div class="flex justify-center mb-8">
      <div class="text-center">
 <a href="{{ path('app_home') }}" class="inline-block py-1 px-2 text-l font-bold text-white bg-black rounded-lg text-base md:text-l">
            Tente Mania
         </a>      </div>
    </div>

    <!-- Navigation -->
    <div class="mb-8">
      <div class="flex items-center text-sm">
        <span class="font-medium">Information</span>
        <span class="mx-2 text-gray-400">/</span>
        <span class="font-medium">Livraison</span>
        <span class="mx-2 text-gray-400">/</span>
        <span class="font-medium">Paiement</span>
      </div>
    </div>

    <!-- Mobile Order Summary Section -->
    <div class="lg:hidden">
      <button id="orderSummaryToggle" class="w-full bg-white p-4 rounded-lg shadow-sm border border-gray-200 flex justify-between items-center">
        <span class="font-bold">Total: {{total}}€</span>
        <svg id="toggleIcon" class="w-5 h-5 transform transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
        </svg>
      </button>
      
      <!-- Mobile Order Summary Content -->
      <div id="mobileSummary" class="hidden bg-white p-6 rounded-lg shadow-sm border border-gray-200 mt-4">
        {% for element in cartItems %}
        <div class="flex items-center mb-6">
          <div class="flex-shrink-0 mr-4">
            {% if element.product.imgProducts.first %}
              <img src="{{ vich_uploader_asset(element.product.imgProducts.first, 'imageFile') }}" alt="{{ element.product.title }}" class="w-16 h-16 object-contain">
            {% else %}
              <img src="https://images.unsplash.com/photo-1523987355523-c7b5b0dd90a7?w=400&auto=format&fit=crop&q=60" alt="{{ element.product.title }}" class="w-16 h-16 object-contain">
            {% endif %}
          </div>
          <div>
            <h3 class="font-medium">{{element.product.title}}</h3>
            <p class="text-sm text-gray-600">Quantité: {{element.quantity}}</p>
          </div>
          <div class="ml-auto font-medium">{{element.product.price}}€</div>
        </div>
        {% endfor %}

        <div class="border-t border-gray-200 pt-4 mb-4">
          <div class="flex justify-between mb-2">
            <span class="font-medium">Sous-total</span>
            <span class="font-medium">{{total}}€</span>
          </div>
          <div class="flex justify-between text-sm text-gray-600">
            <span>Livraison</span>
            <span>Calculated in next step</span>
          </div>
        </div>

        <div class="border-t border-gray-200 pt-4">
          <div class="flex justify-between">
            <span class="text-lg font-bold">Total</span>
            <span class="text-lg font-bold">{{total}}€</span>
          </div>
        </div>
      </div>
    </div>
    
    <div class="lg:flex lg:space-x-12 mt-8">
      <!-- Form Section -->
      <div class="lg:w-2/3">
        <form id="orderForm" action="{{ path('app_order') }}" method="post" novalidate>
          <h2 class="text-xl font-medium mb-4">Informations de contact</h2>
          <div class="mb-6">
            <input
              type="email"
              name="email"
              placeholder="Adresse e-mail"
              class="w-full border border-gray-300 rounded p-3 mb-1"
              id="email"
              required
            />
            <div id="emailError" class="text-red-500 text-sm hidden mb-4">Veuillez saisir une adresse email valide.</div>
          </div>

          <h2 class="text-xl font-medium mb-4">Informations de facture</h2>
          <div class="space-y-4 mb-6">
            <div>
              <input
                type="text"
                placeholder="Nom"
                id="nom" 
                name="nom"
                class="w-full border border-gray-300 rounded p-3"
                required
              />
              <div id="nomError" class="text-red-500 text-sm hidden">Ce champ ne doit contenir que des lettres.</div>
            </div>
            
            <div>
              <input
                type="text"
                placeholder="Rue et numéro"
                id="rue"
                name="rue"
                class="w-full border border-gray-300 rounded p-3"
                required
              />
              <div id="rueError" class="text-red-500 text-sm hidden">Veuillez saisir une adresse valide.</div>
            </div>
            
            <input
              type="text"
              placeholder="Adresse supplémentaire"
              id="adresse_supp"
              name="adresse_sup"
              class="w-full border border-gray-300 rounded p-3"
            />

            <div class="flex space-x-4">
              <div class="w-1/3">
                <input
                  type="text"
                  placeholder="Code postal"
                  id="code_postal"
                  name="code_postal"
                  class="w-full border border-gray-300 rounded p-3"
                  required
                />
                <div id="codePostalError" class="text-red-500 text-sm hidden">Code postal invalide (5 chiffres).</div>
              </div>
              
              <div class="w-2/3">
                <input
                  type="text"
                  placeholder="Ville"
                  id="ville"
                  name="ville"
                  class="w-full border border-gray-300 rounded p-3"
                  required
                />
                <div id="villeError" class="text-red-500 text-sm hidden">Ce champ ne doit contenir que des lettres.</div>
              </div>
            </div>

            <div class="relative">
              <select  
                id="pays" 
                name="pays"
                class="w-full border border-gray-300 rounded p-3 appearance-none bg-white"
                required
              >
                <option value="">Sélectionner un pays</option>
                <option value="France">France</option>
              </select>
              <div id="paysError" class="text-red-500 text-sm hidden">Veuillez sélectionner un pays.</div>
              <div class="absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none">
                <svg class="h-5 w-5 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
                  <path
                    fill-rule="evenodd"
                    d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"
                    clip-rule="evenodd"
                  ></path>
                </svg>
              </div>
            </div>

            <div>
              <input
                type="tel"
                placeholder="Numéro de téléphone"
                id="telephone"
                name="telephone"
                class="w-full border border-gray-300 rounded p-3"
                required
              />
              <div id="telephoneError" class="text-red-500 text-sm hidden">Numéro de téléphone invalide.</div>
            </div>
          </div>

          <!-- Boutons de navigation -->
          <div class="flex justify-between mt-8">
            <a href="#" class="flex items-center text-gray-700 font-medium">
              <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
              </svg>
              Retour au panier
            </a>
            <button type="submit" class="bg-amber-600 hover:bg-amber-700 text-white px-6 py-3 rounded">
              Livraison
              <svg class="w-5 h-5 ml-2 inline" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
              </svg>
            </button>
          </div>
        </form>
      </div>

      <!-- Desktop Order Summary -->
      <div class="lg:w-1/3 mt-12 lg:mt-0">
        <div class="bg-white p-6 rounded-lg shadow-sm border border-gray-200 hidden lg:block">
          {% for element in cartItems %}
          <div class="flex items-center mb-6">
            <div class="flex-shrink-0 mr-4">
              {% if element.product.imgProducts.first %}
                <img src="{{ vich_uploader_asset(element.product.imgProducts.first, 'imageFile') }}" alt="{{ element.product.title }}" class="w-16 h-16 object-contain">
              {% else %}
                <img src="https://images.unsplash.com/photo-1523987355523-c7b5b0dd90a7?w=400&auto=format&fit=crop&q=60" alt="{{ element.product.title }}" class="w-16 h-16 object-contain">
              {% endif %}
            </div>
            <div>
              <h3 class="font-medium">{{element.product.title}}</h3>
              <p class="text-sm text-gray-600">Quantité: {{element.quantity}}</p>
            </div>
            <div class="ml-auto font-medium">{{element.product.price}}€</div>
          </div>
          {% endfor %}

          <div class="border-t border-gray-200 pt-4 mb-4">
            <div class="flex justify-between mb-2">
              <span class="font-medium">Sous-total</span>
              <span class="font-medium">{{total}}€</span>
            </div>
            <div class="flex justify-between text-sm text-gray-600">
              <span>Livraison</span>
              <span>Calculated in next step</span>
            </div>
          </div>

          <div class="border-t border-gray-200 pt-4">
            <div class="flex justify-between">
              <span class="text-lg font-bold">Total</span>
              <span class="text-lg font-bold">{{total}}€</span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('orderForm');
    const orderSummaryToggle = document.getElementById('orderSummaryToggle');
    const mobileSummary = document.getElementById('mobileSummary');
    const toggleIcon = document.getElementById('toggleIcon');
    
    // Toggle order summary on mobile
    if (orderSummaryToggle) {
        orderSummaryToggle.addEventListener('click', function() {
            mobileSummary.classList.toggle('hidden');
            toggleIcon.classList.toggle('rotate-180');
        });
    }
    
    // Règles de validation avec expressions régulières
    const validationRules = {
        email: {
            regex: /^[^\s@]+@[^\s@]+\.[^\s@]+$/,
            errorMsg: 'emailError'
        },
        nom: {
            regex: /^[A-Za-zÀ-ÖØ-öø-ÿ\s-]+$/,
            errorMsg: 'nomError'
        },
        rue: {
            regex: /^[A-Za-zÀ-ÖØ-öø-ÿ0-9\s,.'-]+$/,
            errorMsg: 'rueError'
        },
        code_postal: {
            regex: /^[0-9]{5}$/,
            errorMsg: 'codePostalError'
        },
        ville: {
            regex: /^[A-Za-zÀ-ÖØ-öø-ÿ\s-]+$/,
            errorMsg: 'villeError'
        },
        pays: {
            regex: /.+/,
            errorMsg: 'paysError'
        },
        telephone: {
            regex: /^(?:(?:\+|00)33|0)\s*[1-9](?:[\s.-]*\d{2}){4}$/,
            errorMsg: 'telephoneError'
        }
    };
    
    // Fonction pour valider un champ
    function validateField(field) {
        const value = field.value.trim();
        const fieldName = field.id;
        
        if (!validationRules[fieldName]) {
            return true;
        }
        
        const rule = validationRules[fieldName];
        const errorElement = document.getElementById(rule.errorMsg);
        
        if (field.required && value === '') {
            if (errorElement) {
                errorElement.textContent = 'Ce champ est obligatoire.';
                errorElement.classList.remove('hidden');
            }
            return false;
        }
        
        if (!field.required && value === '') {
            if (errorElement) {
                errorElement.classList.add('hidden');
            }
            return true;
        }
        
        if (!rule.regex.test(value)) {
            if (errorElement) {
                errorElement.classList.remove('hidden');
            }
            field.classList.add('border-red-500');
            return false;
        } else {
            if (errorElement) {
                errorElement.classList.add('hidden');
            }
            field.classList.remove('border-red-500');
            return true;
        }
    }
    
    // Ajouter des écouteurs d'événements pour la validation en temps réel
    Object.keys(validationRules).forEach(fieldName => {
        const field = document.getElementById(fieldName);
        if (field) {
            field.addEventListener('blur', function() {
                validateField(this);
            });
            field.addEventListener('input', function() {
                validateField(this);
            });
        }
    });
    
    // Validation du formulaire à la soumission
    form.addEventListener('submit', function(event) {
        let isValid = true;
        
        Object.keys(validationRules).forEach(fieldName => {
            const field = document.getElementById(fieldName);
            if (field) {
                if (!validateField(field)) {
                    isValid = false;
                }
            }
        });
        
        if (!isValid) {
            event.preventDefault();
            const firstInvalidField = document.querySelector('.border-red-500');
            if (firstInvalidField) {
                firstInvalidField.focus();
                firstInvalidField.scrollIntoView({ behavior: 'smooth', block: 'center' });
            }
        }
    });
});
</script>
{% endblock %}